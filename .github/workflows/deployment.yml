name: Deployment CI-CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ vars.CR }}/${{ github.repository }}:${{ github.head_ref || github.ref_name }}-${{ github.sha }}

jobs:
  build_dev:
    name: Build Main Branch
    runs-on: ubuntu-latest
    if: contains( github.ref, 'main')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lowercase Repository Name
        run: |
          echo "IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.CR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile

  build_failed_dev:
    name: notify build_dev failed
    needs: build_dev
    if: ${{ always() && contains(join(needs.build_dev.result, ','), 'failure') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Failed Reason
        run: |
          echo "BUILD ${{ github.head_ref || github.ref_name }} GAGAL"
  
  build_success_dev:
    name: notify build_dev success
    needs: build_dev
    if: ${{ always() && contains(join(needs.build_dev.result, ','), 'success') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Success Message
        run: |
          echo "${{ env.IMAGE_NAME }} SUCCESS"